plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePwd = localProperties.getProperty('keystore.password')
def prodAliasPwd = localProperties.getProperty('keystore.proudctionPassword')

android {
    namespace "com.nylo.android"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libfbjni.so'
    }

    defaultConfig {
        applicationId "io.wheresmyshit.afrikaburn.debug"

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // Enables multidex support for the application
        multiDexEnabled true
    }

    flavorDimensions "environment"
    productFlavors {
        Production {
            dimension "environment"
            applicationId "io.wheresmyshit.afrikaburn"
            manifestPlaceholders.deepLinkHost = "afrika.burn.fan"
        }
        Runner {
            getIsDefault().set(true)
            dimension "environment"
            applicationId "io.wheresmyshit.afrikaburn.debug"
            manifestPlaceholders.deepLinkHost = "dev.afrika.burn.fan"
        }
    }

    signingConfigs {
        releaseProduction {
            storeFile file("/Users/vincekruger/Library/Mobile Documents/com~apple~CloudDocs/Dev & Design/App Credentials/Android Signing Keys/afrikaburn.jks")
            storePassword keystorePwd
            keyAlias "production"
            keyPassword prodAliasPwd
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.releaseProduction
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}
